package service;
import java.awt.List;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.UUID;
import dto.Employee;
import dao.DatabaseQueries;
public class OperationsWithMysql {
	
    Scanner scanner=new Scanner(System.in);
    String stringFormatOne="%-5s%-36s %-5s %-12s %-5s %-12s %-5s %-10s %-5s %-28s %-5s\n";
    String StringFormatTwo="%-5s%-33s %-5s %-12s %-5s %-12s %-5s %-13s %-5s %-28s %-5s\n";
    String regxForNumber="(0/91)?[6-9][0-9]{9}";
    String regxForEmail="^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
	DatabaseQueries databaseQueries=new DatabaseQueries();
	
	public void add() {
		Employee employee = new Employee();
		System.out.println("Enter First name (required) \nFor example : Varnit");
		int flag;
		String str;
		do {
			 flag = 1;
			 str = scanner.nextLine();
			 if(str.isEmpty()){
				 flag = 0;
				 System.out.println("required");
			 } else {
				 flag=validateName(str);
				 if(flag==0)
				 {
					 System.out.println("Please enter only characters");
				 }
			 }
		 } while(flag==0);
		employee.setFname(str);

		System.out.println("Enter Last name (required) \nFor example : Tyagi");
		do {
			 flag = 1;
			 str = scanner.nextLine();
			 if(str.isEmpty()){
				 flag = 0;
				 System.out.println("required");
			 } else {
				 flag=validateName(str);
				 if(flag==0)
				 {
					 System.out.println("Please enter only characters");
				 }
			 }
		 } while(flag==0);
		employee.setLname(str);
		
		System.out.println("Enter Mobile Number (required) \nFor India : only 10 digits integer with correct format");
		do {
			 flag = 1;
			 str = scanner.nextLine();
			 if(str.isEmpty()){
				 flag = 0;
				 System.out.println("required");
			 } else {
				 flag=validateMobileNumber(str);
				 if(flag==0)
				 {
					 System.out.println("Please enter correct mobile number");
				 }
			 }
		 } while(flag==0);
		employee.setNumber(str);
		
		System.out.println("Enter Emailid (required) \nFor example : example@gmail.com");
		do {
			 flag = 1;
			 str = scanner.nextLine();
			 if(str.isEmpty()){
				 flag = 0;
				 System.out.println("required");
			 } else {
				 flag=validateEmail(str);
				 if(flag==0)
				 {
					 System.out.println("Please enter correct mobile number");
				 }
			 }
		 } while(flag==0);
        employee.setEmail(str);
        
        String uniqueID = UUID.randomUUID().toString();
		employee.setUid(uniqueID);
		databaseQueries.addData(employee);
	}

	public void read() { 
		try{
			String uid = getUid();
			ArrayList<Employee> list = databaseQueries.readEmployee(uid);
			if (!list.isEmpty()) {
				System.out.println(String.format("%s",
						"----------------------------------------------------------------------------------------------------------------------------------------"));
				
				System.out.format(stringFormatOne,"|", "UniqueID", "|",
						"First Name", "|", "Last Name", "|", "Mobile Number", "|", "E-mail", "|");
				
				System.out.println(String.format("%s",
						"----------------------------------------------------------------------------------------------------------------------------------------"));
				
				System.out.format(StringFormatTwo,"|",
						list.get(0).getUid(), "|", list.get(0).getFname(), "|",list.get(0).getLname(), "|",list.get(0).getNumber(), "|",
						list.get(0).getEmail(), "|");
				System.out.println(String.format("%s",
						"----------------------------------------------------------------------------------------------------------------------------------------"));
				
			} else {
				System.out.println("Desired entry not found please try again");
			}
		} catch (Exception exception) {
			System.out.println("Got an Exception "+exception.getMessage());
		}
	}

	public void readall() { 
		try {
			ArrayList<Employee> list = databaseQueries.readAllEmployees();
			if(!list.isEmpty()) {
			System.out.println(String.format("%s",
					"----------------------------------------------------------------------------------------------------------------------------------------"));
			System.out.format(stringFormatOne,"|", "UniqueID", "|","First Name", "|", "Last Name", "|", "Mobile Number", "|", "E-mail", "|");
			for(int i=0;i<list.size();i++) {
				System.out.println(String.format("%s",
						"----------------------------------------------------------------------------------------------------------------------------------------"));
				
				System.out.format(StringFormatTwo,"|",list.get(i).getUid(), "|", list.get(i).getFname(), "|",list.get(i).getLname(), "|",list.get(i).getNumber(), "|",
						list.get(i).getEmail(), "|");
			}
			System.out.println(String.format("%s",
					"----------------------------------------------------------------------------------------------------------------------------------------"));
			
			}
			else
			{
				System.out.println("Database is empty no entry found");
			}
		} catch (Exception exception) {
			System.out.println("Got an exception "+exception.getMessage());
		}
	}
	
	public void update() {
	    String uid = getUid();
		try {
				ArrayList<Employee> list = null;	
			    list = databaseQueries.checkUidExsist(uid);
			    if (!list.isEmpty()) {
					System.out.println("Your old first name " + list.get(0).getFname()+"\n"+
				    "Enter fname if u want to update else press enter");
					String fname;
					int flag;
					do
					{
						flag=1;
						fname = scanner.nextLine();
						if (fname.isEmpty()) {
							fname = list.get(0).getFname();
						} else {
							flag=validateName(fname);
							if(flag==0)
							{
								System.out.println("Please enter only characters");
							}
						}
					} while(flag==0);
					list.get(0).setFname(fname);
					
				    System.out.println("Your old last name " + list.get(0).getLname()+"\n"+
				    "Enter last name if u want to update else press enter");
					String lname;
					do
					{
						flag=1;
						lname = scanner.nextLine();
						if (lname.isEmpty()) {
							lname = list.get(0).getLname();
						} else {
							flag=validateName(lname);
							if(flag==0)
							{
								System.out.println("Please enter only characters");
							}
						}
					} while(flag==0);
					list.get(0).setLname(lname);
					
					System.out.println("Your old Mobile Number " + list.get(0).getNumber()+"\n"+
					"Enter mobile number if u want to update else press enter");
					String mobileNumber;
					do
					{
						flag=1;
						mobileNumber = scanner.nextLine();
						if (mobileNumber.isEmpty()) {
							mobileNumber = list.get(0).getNumber();
						} else {
							flag=validateMobileNumber(mobileNumber);
							if(flag==0)
							{
								System.out.println("Please enter correct mobile number");
							}
						}
					} while(flag==0);
					list.get(0).setNumber(mobileNumber);
					
					System.out.println("Your old email-id " + list.get(0).getEmail()+"\n"+
					"Enter email-id if u want to update else press enter");
					String email;
					do
					{
						flag=1;
						email = scanner.nextLine();
						if (email.isEmpty()) {
							email = list.get(0).getEmail();
						} else {
							flag=validateEmail(email);
							if(flag==0)
							{
								System.out.println("Please enter correct email address");
							}
						}
					} while(flag==0);
					list.get(0).setEmail(email);
					
					databaseQueries.updateData(uid,list.get(0));
			    } else {
				   System.out.println("Desired entry not found please try again");
			    }
		} catch(Exception exception) {
			System.out.println("Got an Exception "+exception.getMessage());
		}
		
	}
	public void delete() {
		String uid = getUid();
		DatabaseQueries databaseQueries=new DatabaseQueries();
		databaseQueries.deleteData(uid);
	}    
   /* public String getString(){
		 int flag1,flag2;
		 String str;
		 do {
			 flag1 = 1;
			 flag2 = 1;
			 str = scanner.nextLine();
			 if(str.isEmpty()){
				 flag2 = 0;
			 }
			 try{
				 int no = Integer.parseInt(str);
			 } catch(Exception e) {
				  flag1 = 0;
			   }
			 if(flag1==1) {
				 System.out.println("Please enter correct name");
			 }
			 if(flag2==0) {
				 System.out.println("required");
			 }
			
		 } while(flag1==1||flag2==0);
		 
		 return str;
	 }
    
    public String getString1() {
		 int flag;
		 String str;
		 do {
			 flag = 1;
			 str = scanner.nextLine();
			 try {
				 int no = Integer.parseInt(str);
			 } catch(Exception e) {
				 flag=0;
			   }
			 if(flag==1){
				 System.out.println("Please enter correct name");
			 }
			
		 } while(flag==1);
		 
		 return str;
	 }
    
	public String getNumber() {
		String number;
		int flag = 0;
		do {
			flag = 0;
			number = scanner.nextLine();
			if (!number.matches(regxForNumber)) {
				System.out.println("Please enter correct contact number");
				flag = 1;
			}

		} while (flag == 1);
		return number;
	}

	public String getNumber1() {
		String number;
		int flag;
		do {
			    number = scanner.nextLine();
			    if(number.isEmpty()){
				    flag=0;
				    return number;
			    } else {
						   flag=0;
					       if(!number.matches(regxForNumber)) {
					    	   System.out.println("Please enter correct contact number");
					    	   flag=1;
					        }
						 
			    }
		} while(flag==1);
	    return number;
	 }

	public String getEmail() {
		int flag;
		String email;
		do {
			flag = 0;
			email = scanner.nextLine();
			if (!email.matches(regxForEmail)) {
				System.out.println("Please enter correct email address");
				flag = 1;
			}

		} while (flag == 1);
		return email;
	}
    
	public String getEmail1() {
		 int flag;
		 String email;
		 do
		 {
		     email = scanner.nextLine();
		     if(email.isEmpty()) {
			 flag=0;
			 return email;
		     } else {
				 flag=0;
			     if(!email.matches(regxForEmail)) {
			    	 System.out.println("Please enter correct email address");
			    	 flag=1;
			     }
		     }
		 } while(flag==1);
		 return email;
		 
	 }
	 */
	public int validateName(String str)
	{
		int flag = 0;
		try{
			int no = Integer.parseInt(str);
		 } catch(Exception e) {
			flag = 1;
		 }
		return flag;
	}
	public int validateMobileNumber(String number)
	{
		int flag = 1;
		if (!number.matches(regxForNumber)) {
			flag = 0;
		}
		return flag;
	}
	public int validateEmail(String number)
	{
		int flag = 1;
		if (!number.matches(regxForEmail)) {
			flag = 0;
		}
		return flag;
	}
	public String getUid() {
		System.out.println("Enter uuid");
		String str = scanner.nextLine();
		return str;
	}
}
